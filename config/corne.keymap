/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&kp CAPS>;
            key-positions = <24 35>;
        };
    };

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <0>;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "DEF";
            bindings = <
&kp GRAVE       &kp Q               &kp W           &kp E                &kp R             &kp T              &kp Y        &kp U              &kp I                 &kp O            &kp P                        &kp BSPC
&kp ESC         &hm LEFT_CONTROL A  &hm LEFT_GUI S  &hm LEFT_ALT D       &hm LEFT_SHIFT F  &kp G              &kp H        &hm RIGHT_SHIFT J  &hm RIGHT_ALT K       &hm RIGHT_GUI L  &hm RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z               &kp X           &kp C                &kp V             &kp B              &kp N        &kp M              &kp COMMA             &kp DOT          &kp FSLH                     &kp RIGHT_SHIFT
                                                    &mt LEFT_ALT ESCAPE  &kp TAB           &lt 1 BACKSPACE    &lt 2 SPACE  &kp ENTER          &mt RIGHT_ALT DELETE
            >;
        };

        NUMS {
            bindings = <
&kp TAB  &kp F9  &kp F10  &kp F11  &kp F12  &kp F5        &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK  &kp PLUS
&trans   &kp F5  &kp F6   &kp F7   &kp F8   &kp PERIOD    &kp N0     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH     &kp RIGHT_SHIFT
&none    &kp F1  &kp F2   &kp F3   &kp F4   &kp EQUAL     &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none         &none
                          &trans   &trans   &trans        &trans     &kp DELETE    &trans
            >;

            label = "NUMS";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "SYM";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp PIPE         &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp BACKSLASH    &kp UNDER  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &kp MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
                        &trans  &trans  &trans           &trans     &trans                &trans
            >;
        };

        misc {
            display-name = "MISC";
            bindings = <
&kp TAB         &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp C_VOLUME_DOWN        &kp C_VOLUME_UP          &kp C_PLAY_PAUSE         &kp C_PREV  &kp C_NEXT       &to 4
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT                 &kp DOWN                 &kp UP                   &kp RIGHT   &kp PRINTSCREEN  &trans
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans        &trans          &kp LC(RA(KP_NUMBER_1))  &kp LC(RA(KP_NUMBER_2))  &kp LC(RA(KP_NUMBER_3))  &trans      &trans           &trans
                                            &trans        &trans        &trans          &trans                   &trans                   &trans
            >;
        };

        GAME {
            display-name = "GAME";
            bindings = <
&kp TAB                &kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y  &kp U          &kp I                 &kp O    &kp P     &kp BSPC
&mt LEFT_SHIFT ESCAPE  &kp A  &kp S  &kp D  &kp F      &kp G        &kp H  &kp J          &kp K                 &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL       &kp Z  &kp X  &kp C  &kp V      &kp B        &kp N  &kp M          &kp COMMA             &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                     &mo 5  &kp SPACE  &kp SPACE    &to 0  &kp BACKSPACE  &mt RIGHT_ALT DELETE
            >;
        };

        GAMEALT {
            bindings = <
&trans     &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans   &kp F12
&trans     &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &trans  &trans  &trans  &trans  &trans   &trans
                           &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        MISC {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
